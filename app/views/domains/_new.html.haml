- domain ||= @domain
%div.new-domain-form-container{ :class => (domain.errors.any? || defined?(show_form)) ? '' : 'hidden' }
  %div{ :style => 'display: none' }
    #help-domain=t :help_domain_fqdn
    #help-primary-ns=t :help_domain_primary_ns
    #help-contact=t :help_domain_contact
    #help-refresh=t :help_domain_refresh
    #help-retry=t :help_domain_retry
    #help-expire=t :help_domain_expire
    #help-minimum=t :help_domain_minimum
    #help-authority-type=t :help_domain_authority_type
    #help-master=t :help_domain_master

  %p= t(:label_create_new_domain_note)

  = form_for(domain, :remote => true, :html => {:class => 'new-domain-form'}) do |f|
    - if domain.errors.any?
      %ul.errors
        - domain.errors.full_messages.each do |msg|
          %li= msg

    %table#new-domain
      %tbody
        %tr.template.notemplate.slave.master.forward
          %td= f.label :name, t(:label_domain_name)
          %td= f.text_field :name
          %td= help_icon('help-domain')
        %tr#domain-templates.template.notemplate.slave.master.forward
          %td= f.label :domain_template_id, t(:label_domain_domain_template)
          %td
            - if DomainTemplate.with_soa.count > 0
              = collection_select(:domain, :domain_template_id, (DomainTemplate.with_soa.all.append DomainTemplate.new(id: nil, name: t(:label_blank_domain_template))), :id, :name)
            - else
              %em
                = link_to(t(:label_create_domain_templates), domain_templates_path)
                = t(:label_domain_for_eazy_management)
          %td &nbsp;
        %tr.notemplate.slave.master.forward
          %td= f.label :authority_type, t(:label_domain_authority_type)
          %td= f.collection_select :authority_type, Domain::AUTHORITY_TYPES, :first, :last
          %td= help_icon('help-authority-type')
        %tr#master-address.notemplate.slave
          %td= f.label :master, t(:label_domain_master_address)
          %td= f.text_field :master
          %td= help_icon('help-master')
        %tr#forward-address.notemplate.forward
          %td= f.label :master, t(:label_domain_forwarder)
          %td= f.text_field :master
          %td= help_icon('help-forwarder')
        %tr.notemplate.master.slave.forward
          %td= f.label :view, t(:label_domain_view)
          %td= f.collection_select :view_id, View.all, :id, :name, :include_blank => true
          %td= help_icon('help-domain-view')
        - if current_user.admin?
          %tr.notemplate.forward
            %td= label_tag :export_all, "Export to all ns servers"
            %td= check_box_tag :export_all, {}, true
            %td= help_icon('help-domain-view')
          %tr.notemplate.forward.export-to.export-to-hide
            %td= f.label :export_to, "Export to"
            %td= "Use ctrl/cmd to multiple select"
          %tr.notemplate.forward.export-to.export-to-hide
            %td
            %td.export-to= f.select :export_to, options_from_collection_for_select(@ns, :first, :last), {height: "80px"}, multiple: true, allow_blank: true
        %tr.notemplate.master
          %td= f.label :ttl, t(:label_domain_ttl)
          %td= f.text_field :ttl
          %td= help_icon('help-domain-ttl')
        %tr.notemplate.master
          %td= f.label :primary_ns, t(:label_domain_primary_name_server)
          %td= f.text_field :primary_ns
          %td= help_icon('help-primary-ns')
        %tr.notemplate.master
          %td= f.label :contact, t(:label_domain_contact)
          %td= f.text_field :contact
          %td= help_icon('help-contact')
        %tr.notemplate.master
          %td= f.label :refresh, t(:label_domain_refresh)
          %td= f.text_field :refresh
          %td= help_icon('help-refresh')
        %tr.notemplate.master
          %td= f.label :retry, t(:label_domain_retry)
          %td= f.text_field :retry
          %td= help_icon('help-retry')
        %tr.notemplate.master
          %td= f.label :expire, t(:label_domain_expire)
          %td= f.text_field :expire
          %td= help_icon('help-expire')
        %tr.notemplate.master
          %td= f.label :minimum, t(:label_domain_minimum)
          %td= f.text_field :minimum
          %td= help_icon('help-minimum')
      - if GloboDns::Config::DOMAINS_OWNERSHIP
        %tr
          %td= label :sub_component, "Sub component"
          %td= select_tag :sub_component, options_for_select(@sub_components), {:required => true}
      %tfoot
        %tr.actions
          %td{:colspan => 3}
            = button_tag(t(:generic_cancel), :class => 'cancel-new-domain-button ui-icon-ban-circle')
            = f.button(t(:generic_create),   :class => 'create-domain-button ui-icon-download-alt')
